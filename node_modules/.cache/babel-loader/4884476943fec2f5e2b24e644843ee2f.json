{"ast":null,"code":"var _jsxFileName = \"/home/prymostka/Downloads/it-kama/src/components/Users/UsersContainer.jsx\";\nimport React, { Component } from \"react\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching } from \"../../redux/users-reducer.js\";\nimport Users from \"./Users.jsx\";\nimport Loader from \"../Loader/Loader.jsx\";\n\nclass UsersContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(pageNumber, \"&count=\").concat(this.props.pageSize)).then(response => {\n        this.props.setUsers(response.data.items);\n        this.props.toggleIsFetching(false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(this.props.currentPage, \"&count=\").concat(this.props.pageSize)).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n      this.props.toggleIsFetching(false);\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      onPageChanged: this.onPageChanged,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {// follow: userId => {\n    //   dispatch(followAC(userId));\n    // },\n    // unfollow: userId => {\n    //   dispatch(unFollowAC(userId));\n    // },\n    // setUsers: users => {\n    //   dispatch(setUsersAC(users));\n    // },\n    // setCurrentPage: pageNumber => {\n    //   dispatch(setCurrentPageAC(pageNumber));\n    // },\n    // setTotalUsersCount: usersNumber => {\n    //   dispatch(setTotalUsersCountAC(usersNumber));\n    // },\n    // toggleIsFetching: isFetching => {\n    //   dispatch(toggleIsFetchingAC(isFetching));\n    // }\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/home/prymostka/Downloads/it-kama/src/components/Users/UsersContainer.jsx"],"names":["React","Component","axios","connect","follow","setUsers","unfollow","setCurrentPage","setTotalUsersCount","toggleIsFetching","Users","Loader","UsersContainer","onPageChanged","pageNumber","props","get","pageSize","then","response","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,kBALF,EAMEC,gBANF,QAOO,8BAPP;AAQA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,cAAN,SAA6BX,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAcrCY,aAdqC,GAcrBC,UAAU,IAAI;AAC5B,WAAKC,KAAL,CAAWR,cAAX,CAA0BO,UAA1B;AACA,WAAKC,KAAL,CAAWN,gBAAX,CAA4B,IAA5B;AACAP,MAAAA,KAAK,CACFc,GADH,mEAE+DF,UAF/D,oBAEmF,KAAKC,KAAL,CAAWE,QAF9F,GAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,aAAKJ,KAAL,CAAWV,QAAX,CAAoBc,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACA,aAAKN,KAAL,CAAWN,gBAAX,CAA4B,KAA5B;AACD,OAPH;AAQD,KAzBoC;AAAA;;AACrCa,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,KAAL,CAAWN,gBAAX,CAA4B,IAA5B;AACAP,IAAAA,KAAK,CACFc,GADH,mEAE+D,KAAKD,KAAL,CAAWQ,WAF1E,oBAE+F,KAAKR,KAAL,CAAWE,QAF1G,GAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,WAAKJ,KAAL,CAAWV,QAAX,CAAoBc,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACA,WAAKN,KAAL,CAAWP,kBAAX,CAA8BW,QAAQ,CAACC,IAAT,CAAcI,UAA5C;AACA,WAAKT,KAAL,CAAWN,gBAAX,CAA4B,KAA5B;AACD,KARH;AASD;;AAeDgB,EAAAA,MAAM,GAAG;AACP,WACE,0CACG,KAAKV,KAAL,CAAWW,UAAX,GAAwB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAqC,IADxC,EAEE,oBAAC,KAAD;AACE,MAAA,eAAe,EAAE,KAAKX,KAAL,CAAWY,eAD9B;AAEE,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWE,QAFvB;AAGE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWQ,WAH1B;AAIE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWa,KAJpB;AAKE,MAAA,aAAa,EAAE,KAAKf,aALtB;AAME,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWX,MANrB;AAOE,MAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWT,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAcD;;AA1CoC;;AA6CvC,MAAMuB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADlB;AAELX,IAAAA,QAAQ,EAAEa,KAAK,CAACC,SAAN,CAAgBd,QAFrB;AAGLU,IAAAA,eAAe,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,eAH5B;AAILJ,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJxB;AAKLG,IAAAA,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL;AALvB,GAAP;AAOD,CARD;;AAUA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBK,GAAP;AAoBD,CArBD;;AAuBA,eAAe9B,OAAO,CAAC0B,eAAD,EAAkB;AACtCzB,EAAAA,MADsC;AAEtCE,EAAAA,QAFsC;AAGtCD,EAAAA,QAHsC;AAItCE,EAAAA,cAJsC;AAKtCC,EAAAA,kBALsC;AAMtCC,EAAAA;AANsC,CAAlB,CAAP,CAOZG,cAPY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n  follow,\n  setUsers,\n  unfollow,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n} from \"../../redux/users-reducer.js\";\nimport Users from \"./Users.jsx\";\nimport Loader from \"../Loader/Loader.jsx\";\n\nclass UsersContainer extends Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`\n      )\n      .then(response => {\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n        this.props.toggleIsFetching(false);\n      });\n  }\n\n  onPageChanged = pageNumber => {\n    this.props.setCurrentPage(pageNumber);\n    this.props.toggleIsFetching(true);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`\n      )\n      .then(response => {\n        this.props.setUsers(response.data.items);\n        this.props.toggleIsFetching(false);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <Loader /> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          users={this.props.users}\n          onPageChanged={this.onPageChanged}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // follow: userId => {\n    //   dispatch(followAC(userId));\n    // },\n    // unfollow: userId => {\n    //   dispatch(unFollowAC(userId));\n    // },\n    // setUsers: users => {\n    //   dispatch(setUsersAC(users));\n    // },\n    // setCurrentPage: pageNumber => {\n    //   dispatch(setCurrentPageAC(pageNumber));\n    // },\n    // setTotalUsersCount: usersNumber => {\n    //   dispatch(setTotalUsersCountAC(usersNumber));\n    // },\n    // toggleIsFetching: isFetching => {\n    //   dispatch(toggleIsFetchingAC(isFetching));\n    // }\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}