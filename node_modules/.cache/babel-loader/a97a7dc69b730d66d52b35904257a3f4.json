{"ast":null,"code":"import _defineProperty from \"/home/prymostka/Downloads/it-kama/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\nconst initialState = {\n  dialogs: [{\n    id: 1,\n    name: \"Artem\"\n  }, {\n    id: 2,\n    name: \"Harry\"\n  }, {\n    id: 3,\n    name: \"Roman\"\n  }, {\n    id: 4,\n    name: \"Jill\"\n  }, {\n    id: 5,\n    name: \"Donkey\"\n  }],\n  messages: [{\n    id: 1,\n    message: \"What's up, dude?\"\n  }, {\n    id: 2,\n    message: \"Hey, have you checked out my story?\"\n  }, {\n    id: 3,\n    message: \"Nevermind..\"\n  }],\n  newMessageBody: \"\"\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_BODY:\n      return _objectSpread({}, state, {\n        newMessageBody: action.body\n      });\n\n    case SEND_MESSAGE:\n      const newMessage = {\n        id: 4,\n        message: state.newMessageBody\n      };\n      return _objectSpread({}, state, {\n        messages: [...state.messages, newMessage],\n        newMessageBody: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body\n});\nexport default dialogsReducer;","map":{"version":3,"sources":["/home/prymostka/Downloads/it-kama/src/redux/dialogs-reducer.js"],"names":["UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","type","body","newMessage","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":";;;;;;AAAA,MAAMA,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CACP;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADO,EAEP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFO,EAGP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHO,EAIP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJO,EAKP;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GALO,CADU;AAQnBC,EAAAA,QAAQ,EAAE,CACR;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GADQ,EAER;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAFQ,EAGR;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAHQ,CARS;AAanBC,EAAAA,cAAc,EAAE;AAbG,CAArB;;AAgBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,uBAAL;AACE,+BAAYU,KAAZ;AAAmBF,QAAAA,cAAc,EAAEG,MAAM,CAACE;AAA1C;;AAEF,SAAKZ,YAAL;AACE,YAAMa,UAAU,GAAG;AACjBV,QAAAA,EAAE,EAAE,CADa;AAEjBG,QAAAA,OAAO,EAAEG,KAAK,CAACF;AAFE,OAAnB;AAIA,+BACKE,KADL;AAEEJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBQ,UAApB,CAFZ;AAGEN,QAAAA,cAAc,EAAE;AAHlB;;AAMF;AACE,aAAOE,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,OAAO,MAAMK,kBAAkB,GAAG,OAAO;AACvCH,EAAAA,IAAI,EAAEX;AADiC,CAAP,CAA3B;AAGP,OAAO,MAAMe,2BAA2B,GAAGH,IAAI,KAAK;AAClDD,EAAAA,IAAI,EAAEZ,uBAD4C;AAElDa,EAAAA;AAFkD,CAAL,CAAxC;AAKP,eAAeJ,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nconst initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Artem\" },\r\n    { id: 2, name: \"Harry\" },\r\n    { id: 3, name: \"Roman\" },\r\n    { id: 4, name: \"Jill\" },\r\n    { id: 5, name: \"Donkey\" }\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"What's up, dude?\" },\r\n    { id: 2, message: \"Hey, have you checked out my story?\" },\r\n    { id: 3, message: \"Nevermind..\" }\r\n  ],\r\n  newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_NEW_MESSAGE_BODY:\r\n      return { ...state, newMessageBody: action.body };\r\n\r\n    case SEND_MESSAGE:\r\n      const newMessage = {\r\n        id: 4,\r\n        message: state.newMessageBody\r\n      };\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, newMessage],\r\n        newMessageBody: \"\"\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({\r\n  type: SEND_MESSAGE\r\n});\r\nexport const updateNewMessageBodyCreator = body => ({\r\n  type: UPDATE_NEW_MESSAGE_BODY,\r\n  body\r\n});\r\n\r\nexport default dialogsReducer;\r\n"]},"metadata":{},"sourceType":"module"}